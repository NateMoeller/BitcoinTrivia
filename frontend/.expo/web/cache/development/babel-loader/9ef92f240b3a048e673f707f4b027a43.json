{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\NateM\\\\BitcoinTrivia\\\\frontend\\\\Ready.js\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nexport default function Ready(props) {\n  var timer = null;\n  var fadeAnimReady = useRef(new Animated.Value(0)).current;\n  var fadeAnimStarting = useRef(new Animated.Value(0)).current;\n\n  var _useState = useState(3),\n      _useState2 = _slicedToArray(_useState, 2),\n      time = _useState2[0],\n      setTime = _useState2[1];\n\n  useEffect(function () {\n    Animated.sequence([Animated.timing(fadeAnimReady, {\n      toValue: 1,\n      duration: 1000\n    }), Animated.timing(fadeAnimStarting, {\n      toValue: 1,\n      duration: 500\n    })]).start(function (_ref) {\n      var finished = _ref.finished;\n\n      if (finished) {\n        timer = startTimer();\n      }\n    });\n    return function () {\n      clearInterval(timer);\n    };\n  }, [fadeAnimReady]);\n  useEffect(function () {\n    if (time === 0) {\n      clearInterval(timer);\n      props.setShowReady(false);\n    }\n  }, [time]);\n\n  var startTimer = function startTimer() {\n    return setInterval(countdown, 1000);\n  };\n\n  var countdown = function countdown() {\n    setTime(function (prevTime) {\n      var newTime = prevTime - 1;\n      return newTime;\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.transitionContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, React.createElement(Animated.View, {\n    style: {\n      opacity: fadeAnimReady\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.readyText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, \"Ready?\")), React.createElement(Animated.View, {\n    style: {\n      opacity: fadeAnimStarting\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.startingInText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, \"Starting in...\", time)));\n}\nvar styles = StyleSheet.create({\n  transitionContainer: {\n    boxSizing: 'border-box'\n  },\n  readyText: {\n    textAlign: 'center',\n    fontWeight: 'bold',\n    fontSize: '4rem',\n    paddingTop: 20,\n    paddingBottom: 20\n  },\n  startingInText: {\n    textAlign: 'center',\n    fontWeight: 'bold',\n    fontSize: '2rem'\n  }\n});","map":{"version":3,"sources":["C:/Users/NateM/BitcoinTrivia/frontend/Ready.js"],"names":["React","useEffect","useRef","useState","Ready","props","timer","fadeAnimReady","Animated","Value","current","fadeAnimStarting","time","setTime","sequence","timing","toValue","duration","start","finished","startTimer","clearInterval","setShowReady","setInterval","countdown","prevTime","newTime","styles","transitionContainer","opacity","readyText","startingInText","StyleSheet","create","boxSizing","textAlign","fontWeight","fontSize","paddingTop","paddingBottom"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;;;;;AAGA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACjC,MAAIC,KAAK,GAAG,IAAZ;AACA,MAAMC,aAAa,GAAGL,MAAM,CAAC,IAAIM,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAAD,CAAN,CAA8BC,OAApD;AACA,MAAMC,gBAAgB,GAAGT,MAAM,CAAC,IAAIM,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAAD,CAAN,CAA8BC,OAAvD;;AACA,kBAAwBP,QAAQ,CAAC,CAAD,CAAhC;AAAA;AAAA,MAAOS,IAAP;AAAA,MAAaC,OAAb;;AAEAZ,EAAAA,SAAS,CAAC,YAAM;AACZO,IAAAA,QAAQ,CAACM,QAAT,CAAkB,CACdN,QAAQ,CAACO,MAAT,CACIR,aADJ,EAEI;AACES,MAAAA,OAAO,EAAE,CADX;AAEEC,MAAAA,QAAQ,EAAE;AAFZ,KAFJ,CADc,EAQdT,QAAQ,CAACO,MAAT,CACIJ,gBADJ,EAEI;AACEK,MAAAA,OAAO,EAAE,CADX;AAEEC,MAAAA,QAAQ,EAAE;AAFZ,KAFJ,CARc,CAAlB,EAeGC,KAfH,CAeS,gBAAkB;AAAA,UAAfC,QAAe,QAAfA,QAAe;;AACvB,UAAIA,QAAJ,EAAc;AACVb,QAAAA,KAAK,GAAGc,UAAU,EAAlB;AACF;AACL,KAnBD;AAqBA,WAAO,YAAM;AACTC,MAAAA,aAAa,CAACf,KAAD,CAAb;AACD,KAFH;AAGH,GAzBQ,EAyBN,CAACC,aAAD,CAzBM,CAAT;AA2BAN,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIW,IAAI,KAAK,CAAb,EAAgB;AACZS,MAAAA,aAAa,CAACf,KAAD,CAAb;AACAD,MAAAA,KAAK,CAACiB,YAAN,CAAmB,KAAnB;AACH;AACJ,GALQ,EAKN,CAACV,IAAD,CALM,CAAT;;AAOA,MAAMQ,UAAU,GAAG,SAAbA,UAAa;AAAA,WAAMG,WAAW,CAACC,SAAD,EAAY,IAAZ,CAAjB;AAAA,GAAnB;;AACA,MAAMA,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpBX,IAAAA,OAAO,CAAC,UAAAY,QAAQ,EAAI;AAChB,UAAMC,OAAO,GAAGD,QAAQ,GAAG,CAA3B;AACA,aAAOC,OAAP;AACH,KAHM,CAAP;AAIH,GALD;;AAOA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,mBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD,CAAU,IAAV;AACI,IAAA,KAAK,EAAE;AACHC,MAAAA,OAAO,EAAEtB;AADN,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEoB,MAAM,CAACG,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,CADJ,EAQI,oBAAC,QAAD,CAAU,IAAV;AACI,IAAA,KAAK,EAAE;AACHD,MAAAA,OAAO,EAAElB;AADN,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEgB,MAAM,CAACI,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAmDnB,IAAnD,CALJ,CARJ,CADJ;AAkBH;AAED,IAAMe,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC7BL,EAAAA,mBAAmB,EAAC;AAClBM,IAAAA,SAAS,EAAE;AADO,GADS;AAI7BJ,EAAAA,SAAS,EAAE;AACPK,IAAAA,SAAS,EAAE,QADJ;AAEPC,IAAAA,UAAU,EAAE,MAFL;AAGPC,IAAAA,QAAQ,EAAE,MAHH;AAIPC,IAAAA,UAAU,EAAE,EAJL;AAKPC,IAAAA,aAAa,EAAE;AALR,GAJkB;AAW7BR,EAAAA,cAAc,EAAE;AACZI,IAAAA,SAAS,EAAE,QADC;AAEZC,IAAAA,UAAU,EAAE,MAFA;AAGZC,IAAAA,QAAQ,EAAE;AAHE;AAXa,CAAlB,CAAf","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { Animated, View, StyleSheet, Text } from 'react-native';\r\n\r\nexport default function Ready(props) {\r\n    let timer = null;\r\n    const fadeAnimReady = useRef(new Animated.Value(0)).current;\r\n    const fadeAnimStarting = useRef(new Animated.Value(0)).current;\r\n    const [time, setTime] = useState(3);\r\n\r\n    useEffect(() => {\r\n        Animated.sequence([\r\n            Animated.timing(\r\n                fadeAnimReady,\r\n                {\r\n                  toValue: 1,\r\n                  duration: 1000,\r\n                }\r\n            ),\r\n            Animated.timing(\r\n                fadeAnimStarting,\r\n                {\r\n                  toValue: 1,\r\n                  duration: 500\r\n                }\r\n            )\r\n        ]).start(({ finished }) => {\r\n            if (finished) {\r\n                timer = startTimer();\r\n             }\r\n        });\r\n\r\n        return () => {\r\n            clearInterval(timer);\r\n          }\r\n    }, [fadeAnimReady]);\r\n\r\n    useEffect(() => {\r\n        if (time === 0) {\r\n            clearInterval(timer);\r\n            props.setShowReady(false);\r\n        }\r\n    }, [time]);\r\n\r\n    const startTimer = () => setInterval(countdown, 1000);\r\n    const countdown = () => {\r\n        setTime(prevTime => {\r\n            const newTime = prevTime - 1;\r\n            return newTime;\r\n        })\r\n    };\r\n\r\n    return (\r\n        <View style={styles.transitionContainer}>\r\n            <Animated.View\r\n                style={{\r\n                    opacity: fadeAnimReady\r\n                }}\r\n            >\r\n                <Text style={styles.readyText}>Ready?</Text>\r\n            </Animated.View>\r\n            <Animated.View\r\n                style={{\r\n                    opacity: fadeAnimStarting\r\n                }}\r\n            >\r\n                <Text style={styles.startingInText}>Starting in...{time}</Text>\r\n            </Animated.View>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    transitionContainer:{\r\n      boxSizing: 'border-box'\r\n    },\r\n    readyText: {\r\n        textAlign: 'center',\r\n        fontWeight: 'bold',\r\n        fontSize: '4rem',\r\n        paddingTop: 20,\r\n        paddingBottom: 20\r\n    },\r\n    startingInText: {\r\n        textAlign: 'center',\r\n        fontWeight: 'bold',\r\n        fontSize: '2rem'\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}