{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\NateM\\\\BitcoinTrivia\\\\frontend\\\\Question.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useRef } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport ProgressBar from \"react-native-web/dist/exports/ProgressBar\";\nexport default function SingleGame(props) {\n  var fadeAnim = useRef(new Animated.Value(0)).current;\n  React.useEffect(function () {\n    Animated.timing(fadeAnim, {\n      toValue: 1,\n      duration: 1000\n    }).start();\n  }, [fadeAnim]);\n\n  var calcProgress = function calcProgress() {\n    return props.time / 10;\n  };\n\n  return React.createElement(View, {\n    style: styles.questionContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.timerText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, props.time), React.createElement(ProgressBar, {\n    color: \"rgb(121, 75, 196)\",\n    progress: calcProgress(),\n    trackColor: \"rgba(121, 75, 196, 0.3)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  })), React.createElement(Animated.Text, {\n    style: _objectSpread(_objectSpread({}, styles.question), {}, {\n      opacity: fadeAnim\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, props.question.question), React.createElement(Pressable, {\n    style: styles.button,\n    onPress: function onPress() {\n      return props.onClickAnswer(0);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, props.question.answers[0])), React.createElement(Pressable, {\n    style: styles.button,\n    onPress: function onPress() {\n      return props.onClickAnswer(1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, props.question.answers[1])), React.createElement(Pressable, {\n    style: styles.button,\n    onPress: function onPress() {\n      return props.onClickAnswer(2);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, props.question.answers[2])), React.createElement(Pressable, {\n    style: styles.button,\n    onPress: function onPress() {\n      return props.onClickAnswer(3);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, props.question.answers[3])));\n}\nvar styles = StyleSheet.create({\n  questionContainer: {\n    boxSizing: 'border-box'\n  },\n  timerText: {\n    textAlign: 'center',\n    fontWeight: 'bold',\n    fontSize: '2rem'\n  },\n  question: {\n    textAlign: 'center',\n    fontWeight: 'bold',\n    fontSize: '2rem'\n  },\n  button: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 12,\n    paddingHorizontal: 32,\n    borderRadius: 4,\n    elevation: 3,\n    backgroundColor: 'blue',\n    color: 'white',\n    cursor: 'pointer',\n    marginBottom: 10,\n    marginTop: 10\n  },\n  buttonText: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white'\n  }\n});","map":{"version":3,"sources":["C:/Users/NateM/BitcoinTrivia/frontend/Question.js"],"names":["React","useRef","SingleGame","props","fadeAnim","Animated","Value","current","useEffect","timing","toValue","duration","start","calcProgress","time","styles","questionContainer","timerText","question","opacity","button","onClickAnswer","buttonText","answers","StyleSheet","create","boxSizing","textAlign","fontWeight","fontSize","alignItems","justifyContent","paddingVertical","paddingHorizontal","borderRadius","elevation","backgroundColor","color","cursor","marginBottom","marginTop","lineHeight","letterSpacing"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\r\nimport { Animated, StyleSheet, Text, View, Pressable, ProgressBar } from 'react-native';\r\n\r\nexport default function SingleGame(props) {\r\n    // Animations\r\n    const fadeAnim = useRef(new Animated.Value(0)).current;\r\n    React.useEffect(() => {\r\n        Animated.timing(\r\n          fadeAnim,\r\n          {\r\n            toValue: 1,\r\n            duration: 1000,\r\n          }\r\n        ).start();\r\n    }, [fadeAnim]);\r\n\r\n\r\n\r\n    const calcProgress = () => props.time / 10;\r\n\r\n    return (\r\n        <View style={styles.questionContainer}>\r\n            <View>\r\n                <Text style={styles.timerText}>{props.time}</Text>\r\n                <ProgressBar\r\n                    color=\"rgb(121, 75, 196)\"\r\n                    progress={calcProgress()}\r\n                    trackColor=\"rgba(121, 75, 196, 0.3)\"\r\n                />\r\n            </View>\r\n            <Animated.Text\r\n                style={{\r\n                    ...styles.question,\r\n                    opacity: fadeAnim\r\n                }}\r\n            >\r\n                {props.question.question}\r\n            </Animated.Text>\r\n            <Pressable style={styles.button} onPress={() => props.onClickAnswer(0)}>\r\n                <Text style={styles.buttonText}>{props.question.answers[0]}</Text>\r\n            </Pressable>\r\n            <Pressable style={styles.button} onPress={() => props.onClickAnswer(1)}>\r\n                <Text style={styles.buttonText}>{props.question.answers[1]}</Text>\r\n            </Pressable>\r\n            <Pressable style={styles.button} onPress={() => props.onClickAnswer(2)}>\r\n                <Text style={styles.buttonText}>{props.question.answers[2]}</Text>\r\n            </Pressable>\r\n            <Pressable style={styles.button} onPress={() => props.onClickAnswer(3)}>\r\n                <Text style={styles.buttonText}>{props.question.answers[3]}</Text>\r\n            </Pressable>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    questionContainer:{\r\n      boxSizing: 'border-box'\r\n    },\r\n    timerText: {\r\n        textAlign: 'center',\r\n        fontWeight: 'bold',\r\n        fontSize: '2rem'\r\n    },\r\n    question: {\r\n        textAlign: 'center',\r\n        fontWeight: 'bold',\r\n        fontSize: '2rem'\r\n    },\r\n    button: {\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        paddingVertical: 12,\r\n        paddingHorizontal: 32,\r\n        borderRadius: 4,\r\n        elevation: 3,\r\n        backgroundColor: 'blue',\r\n        color: 'white',\r\n        cursor: 'pointer',\r\n        marginBottom: 10,\r\n        marginTop: 10\r\n    },\r\n    buttonText: {\r\n        fontSize: 16,\r\n        lineHeight: 21,\r\n        fontWeight: 'bold',\r\n        letterSpacing: 0.25,\r\n        color: 'white',\r\n    }\r\n  });"]},"metadata":{},"sourceType":"module"}