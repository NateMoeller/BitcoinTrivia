{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\NateM\\\\BitcoinTrivia\\\\frontend\\\\SingleGame.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport Transition from \"./Transition\";\nimport Ready from \"./Ready\";\nimport Question from \"./Question\";\nimport Gameover from \"./Gameover\";\nexport default function SingleGame() {\n  var _this = this;\n\n  var timer = null;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      questionIndex = _useState2[0],\n      setQuestionIndex = _useState2[1];\n\n  var _useState3 = useState(1000),\n      _useState4 = _slicedToArray(_useState3, 2),\n      time = _useState4[0],\n      setTime = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showReady = _useState6[0],\n      setShowReady = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isCorrect = _useState8[0],\n      setCorrect = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      showTransition = _useState10[0],\n      setShowTransition = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      showGameover = _useState12[0],\n      setShowGameover = _useState12[1];\n\n  var _useState13 = useState(0),\n      _useState14 = _slicedToArray(_useState13, 2),\n      numCorrect = _useState14[0],\n      setNumCorrect = _useState14[1];\n\n  var questions = [{\n    id: 0,\n    question: 'Who is the author of \"The Bitcoin Standard\"?',\n    answers: ['Saifedean Ammous', 'Parker Lewis', 'Michael Saylor', 'Preston Pysh'],\n    labels: ['People'],\n    difficulty: 0,\n    answer: 0\n  }, {\n    id: 1,\n    question: 'Who invented Bitcoin?',\n    answers: ['Craig Wright', 'Vitalik Butrin', 'Satoshi Nakomoto', 'Elon Musk'],\n    labels: ['People'],\n    difficulty: 0,\n    answer: 2\n  }, {\n    id: 2,\n    question: 'Bitcoin uses ___ algorithm',\n    answers: ['Proof of Work', 'Proof of Stake', 'Proof of Keys', 'Proof of Bananas'],\n    labels: ['Bitcoin'],\n    difficulty: 0,\n    answer: 0\n  }];\n\n  var startTimer = function startTimer(newTime) {\n    setTime(newTime);\n    timer = setInterval(countDown, 10);\n  };\n\n  var countDown = function countDown() {\n    setTime(function (prevTime) {\n      var newTime = prevTime - 1;\n\n      if (newTime === 0) {\n        clearInterval(timer);\n        setTime(1000);\n        setCorrect(false);\n        setShowTransition(true);\n      }\n\n      return newTime;\n    });\n  };\n\n  var onClickAnswer = function onClickAnswer(index) {\n    if (questions[questionIndex].answer === index) {\n      setNumCorrect(function (prevNumCorrect) {\n        return prevNumCorrect + 1;\n      });\n      setCorrect(true);\n    } else {\n      setCorrect(false);\n    }\n\n    console.log('TIMER', timer);\n    clearInterval(timer);\n    setTime(1000);\n    setShowTransition(true);\n  };\n\n  var nextQuestion = function nextQuestion() {\n    setShowTransition(false);\n\n    if (questionIndex < questions.length - 1) {\n      setQuestionIndex(function (prevQuestionIndex) {\n        return prevQuestionIndex + 1;\n      });\n    } else {\n      setShowGameover(true);\n    }\n  };\n\n  var getContent = function getContent() {\n    if (showReady) {\n      return React.createElement(Ready, {\n        setShowReady: setShowReady,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 20\n        }\n      });\n    } else if (showTransition) {\n      return React.createElement(Transition, {\n        nextQuestion: nextQuestion,\n        correct: isCorrect,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 20\n        }\n      });\n    } else if (showGameover) {\n      return React.createElement(Gameover, {\n        score: numCorrect,\n        questions: questions,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 20\n        }\n      });\n    }\n\n    return React.createElement(Question, {\n      startTimer: startTimer,\n      time: time,\n      question: questions[questionIndex],\n      onClickAnswer: onClickAnswer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    });\n  };\n\n  return getContent();\n}","map":{"version":3,"sources":["C:/Users/NateM/BitcoinTrivia/frontend/SingleGame.js"],"names":["React","useState","useEffect","useCallback","Transition","Ready","Question","Gameover","SingleGame","timer","questionIndex","setQuestionIndex","time","setTime","showReady","setShowReady","isCorrect","setCorrect","showTransition","setShowTransition","showGameover","setShowGameover","numCorrect","setNumCorrect","questions","id","question","answers","labels","difficulty","answer","startTimer","newTime","setInterval","countDown","prevTime","clearInterval","onClickAnswer","index","prevNumCorrect","console","log","nextQuestion","length","prevQuestionIndex","getContent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport Transition from './Transition';\r\nimport Ready from './Ready';\r\nimport Question from './Question';\r\nimport Gameover from './Gameover';\r\n\r\nexport default function SingleGame() {\r\n    let timer = null;\r\n    const [questionIndex, setQuestionIndex] = useState(0);\r\n    const [time, setTime] = useState(1000);\r\n    const [showReady, setShowReady] = useState(true);\r\n    const [isCorrect, setCorrect] = useState(false);\r\n    const [showTransition, setShowTransition] = useState(false);\r\n    const [showGameover, setShowGameover] = useState(false);\r\n    const [numCorrect, setNumCorrect] = useState(0);\r\n\r\n    // fires when the game starts\r\n    /*useEffect(() => {\r\n        // TODO fix the timer\r\n        clearInterval(timer);\r\n\r\n        setTimeout(() => {\r\n            console.log('starting timer!!!');\r\n            timer = startTimer(1000);\r\n        }, 2500);\r\n\r\n        return () => {\r\n            clearInterval(timer);\r\n        };\r\n    }, [questionIndex]);*/\r\n\r\n    // TODO: get these questions from somewhere else!\r\n    const questions = [\r\n        {\r\n            id: 0,\r\n            question: 'Who is the author of \"The Bitcoin Standard\"?',\r\n            answers: [\r\n                'Saifedean Ammous',\r\n                'Parker Lewis',\r\n                'Michael Saylor',\r\n                'Preston Pysh'\r\n            ],\r\n            labels: [\r\n                'People'\r\n            ],\r\n            difficulty: 0,\r\n            answer: 0\r\n        },\r\n        {\r\n            id: 1,\r\n            question: 'Who invented Bitcoin?',\r\n            answers: [\r\n                'Craig Wright',\r\n                'Vitalik Butrin',\r\n                'Satoshi Nakomoto',\r\n                'Elon Musk'\r\n            ],\r\n            labels: [\r\n                'People'\r\n            ],\r\n            difficulty: 0,\r\n            answer: 2\r\n        },\r\n        {\r\n            id: 2,\r\n            question: 'Bitcoin uses ___ algorithm',\r\n            answers: [\r\n                'Proof of Work',\r\n                'Proof of Stake',\r\n                'Proof of Keys',\r\n                'Proof of Bananas'\r\n            ],\r\n            labels: [\r\n                'Bitcoin'\r\n            ],\r\n            difficulty: 0,\r\n            answer: 0\r\n        }\r\n    ]\r\n\r\n    const startTimer = (newTime) => {\r\n        setTime(newTime);\r\n        timer = setInterval(countDown, 10);\r\n    }\r\n\r\n    const countDown = () => {\r\n        setTime(prevTime => {\r\n            const newTime = prevTime - 1;\r\n            if (newTime === 0) {\r\n                clearInterval(timer);\r\n                setTime(1000);\r\n                setCorrect(false);\r\n                setShowTransition(true);\r\n            }\r\n            return newTime;\r\n        });\r\n    }\r\n\r\n    const onClickAnswer = (index) => {\r\n        // TODO: use an api to check if it was the correct answer\r\n        if (questions[questionIndex].answer === index) {\r\n            setNumCorrect(prevNumCorrect => prevNumCorrect + 1);\r\n            setCorrect(true);\r\n        } else {\r\n            setCorrect(false);\r\n        }\r\n\r\n        console.log('TIMER', timer);\r\n        clearInterval(timer);\r\n        setTime(1000);\r\n        setShowTransition(true);\r\n    }\r\n\r\n    const nextQuestion = () => {\r\n        setShowTransition(false);\r\n        if (questionIndex < questions.length - 1) {\r\n            setQuestionIndex(prevQuestionIndex => prevQuestionIndex + 1);\r\n        } else {\r\n            setShowGameover(true);\r\n        }\r\n        \r\n    }\r\n\r\n    const getContent = () => {\r\n        if (showReady) {\r\n            return <Ready setShowReady={setShowReady} />\r\n        } else if (showTransition) {\r\n            return <Transition nextQuestion={nextQuestion} correct={isCorrect} />;\r\n        } else if (showGameover) {\r\n            return <Gameover score={numCorrect} questions={questions} />\r\n        }\r\n\r\n        return (\r\n            <Question\r\n                startTimer={startTimer}\r\n                time={time}\r\n                question={questions[questionIndex]}\r\n                onClickAnswer={onClickAnswer}\r\n            />\r\n        );\r\n    }\r\n\r\n    return getContent();\r\n}"]},"metadata":{},"sourceType":"module"}