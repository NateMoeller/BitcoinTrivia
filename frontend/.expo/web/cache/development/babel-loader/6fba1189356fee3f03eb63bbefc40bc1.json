{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NateM\\\\BitcoinTrivia\\\\frontend\\\\Question.js\";\nimport React, { useRef, useEffect } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport ProgressBar from \"react-native-web/dist/exports/ProgressBar\";\nexport default function SingleGame(props) {\n  var NUM_MILLISECONDS = 1000;\n  var timer = null;\n  var fadeAnimQuestion = useRef(new Animated.Value(0)).current;\n  var fadeAnimButtons = useRef(new Animated.Value(0)).current;\n  useEffect(function () {\n    Animated.sequence([Animated.timing(fadeAnimQuestion, {\n      toValue: 1,\n      duration: 1000,\n      delay: 1000\n    }), Animated.timing(fadeAnimButtons, {\n      toValue: 1,\n      duration: 500\n    })]).start(function (_ref) {\n      var finished = _ref.finished;\n\n      if (finished) {\n        timer = props.startTimer(NUM_MILLISECONDS);\n      }\n    });\n    return function () {\n      clearInterval(timer);\n    };\n  }, [fadeAnimQuestion, props.question.id]);\n\n  var msToSec = function msToSec(time) {\n    return (time / 100).toFixed(2);\n  };\n\n  var calcProgress = function calcProgress() {\n    return props.time / NUM_MILLISECONDS;\n  };\n\n  var onClickAnswer = function onClickAnswer(index) {\n    Animated.timing(fadeAnimButtons).reset();\n    props.onClickAnswer(index);\n  };\n\n  return React.createElement(View, {\n    style: styles.questionContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.timerText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, msToSec(props.time)), React.createElement(ProgressBar, {\n    color: \"rgb(121, 75, 196)\",\n    progress: calcProgress(),\n    trackColor: \"rgba(121, 75, 196, 0.3)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  })), React.createElement(Animated.View, {\n    style: {\n      opacity: fadeAnimQuestion\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.question,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, props.question.question)), React.createElement(Animated.View, {\n    style: {\n      opacity: fadeAnimButtons\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, React.createElement(Pressable, {\n    style: styles.button,\n    onPress: function onPress() {\n      return onClickAnswer(0);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, props.question.answers[0])), React.createElement(Pressable, {\n    style: styles.button,\n    onPress: function onPress() {\n      return onClickAnswer(1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, props.question.answers[1])), React.createElement(Pressable, {\n    style: styles.button,\n    onPress: function onPress() {\n      return onClickAnswer(2);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, props.question.answers[2])), React.createElement(Pressable, {\n    style: styles.button,\n    onPress: function onPress() {\n      return onClickAnswer(3);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, props.question.answers[3]))));\n}\nvar styles = StyleSheet.create({\n  questionContainer: {\n    boxSizing: 'border-box'\n  },\n  timerText: {\n    textAlign: 'center',\n    fontWeight: 'bold',\n    fontSize: '2rem'\n  },\n  question: {\n    textAlign: 'center',\n    fontWeight: 'bold',\n    fontSize: '2rem',\n    marginBottom: 40,\n    marginTop: 40\n  },\n  button: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 12,\n    paddingHorizontal: 32,\n    borderRadius: 4,\n    elevation: 3,\n    backgroundColor: 'blue',\n    color: 'white',\n    cursor: 'pointer',\n    marginBottom: 10,\n    marginTop: 10\n  },\n  buttonText: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white'\n  }\n});","map":{"version":3,"sources":["C:/Users/NateM/BitcoinTrivia/frontend/Question.js"],"names":["React","useRef","useEffect","SingleGame","props","NUM_MILLISECONDS","timer","fadeAnimQuestion","Animated","Value","current","fadeAnimButtons","sequence","timing","toValue","duration","delay","start","finished","startTimer","clearInterval","question","id","msToSec","time","toFixed","calcProgress","onClickAnswer","index","reset","styles","questionContainer","timerText","opacity","button","buttonText","answers","StyleSheet","create","boxSizing","textAlign","fontWeight","fontSize","marginBottom","marginTop","alignItems","justifyContent","paddingVertical","paddingHorizontal","borderRadius","elevation","backgroundColor","color","cursor","lineHeight","letterSpacing"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport { Animated, StyleSheet, Text, View, Pressable, ProgressBar } from 'react-native';\r\n\r\nexport default function SingleGame(props) {\r\n    const NUM_MILLISECONDS = 1000;\r\n    let timer = null;\r\n    // Animations\r\n    const fadeAnimQuestion = useRef(new Animated.Value(0)).current;\r\n    const fadeAnimButtons = useRef(new Animated.Value(0)).current;\r\n    \r\n    useEffect(() => {\r\n        Animated.sequence([\r\n            Animated.timing(\r\n                fadeAnimQuestion,\r\n                {\r\n                  toValue: 1,\r\n                  duration: 1000,\r\n                  delay: 1000\r\n                }\r\n            ),\r\n            Animated.timing(\r\n                fadeAnimButtons,\r\n                {\r\n                  toValue: 1,\r\n                  duration: 500\r\n                }\r\n            )\r\n        ]).start(({ finished }) => {\r\n            if (finished) {\r\n                timer = props.startTimer(NUM_MILLISECONDS);\r\n            }\r\n        });\r\n\r\n        return () => {\r\n            clearInterval(timer);\r\n        }\r\n        \r\n    }, [fadeAnimQuestion, props.question.id]);\r\n\r\n    const msToSec = (time) => (time / 100).toFixed(2);\r\n    const calcProgress = () => props.time / NUM_MILLISECONDS;\r\n\r\n    const onClickAnswer = (index) => {\r\n        Animated.timing(fadeAnimButtons).reset();\r\n        props.onClickAnswer(index);\r\n    }\r\n\r\n    return (\r\n        <View style={styles.questionContainer}>\r\n            <View>\r\n                <Text style={styles.timerText}>{msToSec(props.time)}</Text>\r\n                <ProgressBar\r\n                    color=\"rgb(121, 75, 196)\"\r\n                    progress={calcProgress()}\r\n                    trackColor=\"rgba(121, 75, 196, 0.3)\"\r\n                />\r\n            </View>\r\n            <Animated.View\r\n                style={{\r\n                    opacity: fadeAnimQuestion\r\n                }}\r\n            >\r\n                <Text style={styles.question}>{props.question.question}</Text>\r\n            </Animated.View>\r\n            <Animated.View\r\n                style={{\r\n                    opacity: fadeAnimButtons\r\n                }}\r\n            >\r\n                <Pressable style={styles.button} onPress={() => onClickAnswer(0)}>\r\n                    <Text style={styles.buttonText}>{props.question.answers[0]}</Text>\r\n                </Pressable>\r\n                <Pressable style={styles.button} onPress={() => onClickAnswer(1)}>\r\n                    <Text style={styles.buttonText}>{props.question.answers[1]}</Text>\r\n                </Pressable>\r\n                <Pressable style={styles.button} onPress={() => onClickAnswer(2)}>\r\n                    <Text style={styles.buttonText}>{props.question.answers[2]}</Text>\r\n                </Pressable>\r\n                <Pressable style={styles.button} onPress={() => onClickAnswer(3)}>\r\n                    <Text style={styles.buttonText}>{props.question.answers[3]}</Text>\r\n                </Pressable>\r\n            </Animated.View>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    questionContainer:{\r\n      boxSizing: 'border-box'\r\n    },\r\n    timerText: {\r\n        textAlign: 'center',\r\n        fontWeight: 'bold',\r\n        fontSize: '2rem'\r\n    },\r\n    question: {\r\n        textAlign: 'center',\r\n        fontWeight: 'bold',\r\n        fontSize: '2rem',\r\n        marginBottom: 40,\r\n        marginTop: 40\r\n    },\r\n    button: {\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        paddingVertical: 12,\r\n        paddingHorizontal: 32,\r\n        borderRadius: 4,\r\n        elevation: 3,\r\n        backgroundColor: 'blue',\r\n        color: 'white',\r\n        cursor: 'pointer',\r\n        marginBottom: 10,\r\n        marginTop: 10\r\n    },\r\n    buttonText: {\r\n        fontSize: 16,\r\n        lineHeight: 21,\r\n        fontWeight: 'bold',\r\n        letterSpacing: 0.25,\r\n        color: 'white',\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}