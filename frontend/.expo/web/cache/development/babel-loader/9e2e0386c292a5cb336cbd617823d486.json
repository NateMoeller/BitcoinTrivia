{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\NateM\\\\BitcoinTrivia\\\\frontend\\\\SingleGame.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport Ready from \"./Ready\";\nimport Question from \"./Question\";\nexport default function SingleGame() {\n  var _this = this;\n\n  var timer = null;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      questionIndex = _useState2[0],\n      setQuestionIndex = _useState2[1];\n\n  var _useState3 = useState(1000),\n      _useState4 = _slicedToArray(_useState3, 2),\n      time = _useState4[0],\n      setTime = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showReady = _useState6[0],\n      setShowReady = _useState6[1];\n\n  useEffect(function () {}, [questionIndex]);\n  var questions = [{\n    id: 0,\n    question: 'Who is the author of \"The Bitcoin Standard\"?',\n    answers: ['Saifedean Ammous', 'Parker Lewis', 'Michael Saylor', 'Preston Pysh'],\n    labels: ['People'],\n    difficulty: 0\n  }];\n\n  var startTimer = function startTimer(newTime) {\n    setTime(newTime);\n    return setInterval(countDown, 10);\n  };\n\n  var countDown = function countDown() {\n    setTime(function (prevTime) {\n      var newTime = prevTime - 1;\n\n      if (newTime === 0) {\n        clearInterval(timer);\n      }\n\n      return newTime;\n    });\n  };\n\n  var onClickAnswer = function onClickAnswer(index) {\n    console.log('clicked', index);\n    setTime(1000);\n    setQuestionIndex(function (prevQuestionIndex) {\n      return setQuestionIndex(prevQuestionIndex + 1);\n    });\n  };\n\n  var getContent = function getContent() {\n    if (showReady) {\n      return React.createElement(Ready, {\n        setShowReady: setShowReady,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 20\n        }\n      });\n    }\n\n    return React.createElement(Question, {\n      time: time,\n      question: questions[questionIndex],\n      onClickAnswer: onClickAnswer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    });\n  };\n\n  return getContent();\n}","map":{"version":3,"sources":["C:/Users/NateM/BitcoinTrivia/frontend/SingleGame.js"],"names":["React","useState","useEffect","useCallback","Ready","Question","SingleGame","timer","questionIndex","setQuestionIndex","time","setTime","showReady","setShowReady","questions","id","question","answers","labels","difficulty","startTimer","newTime","setInterval","countDown","prevTime","clearInterval","onClickAnswer","index","console","log","prevQuestionIndex","getContent"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAOC,KAAP;AACA,OAAOC,QAAP;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACjC,MAAIC,KAAK,GAAG,IAAZ;;AACA,kBAA0CN,QAAQ,CAAC,CAAD,CAAlD;AAAA;AAAA,MAAOO,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,mBAAwBR,QAAQ,CAAC,IAAD,CAAhC;AAAA;AAAA,MAAOS,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAkCV,QAAQ,CAAC,IAAD,CAA1C;AAAA;AAAA,MAAOW,SAAP;AAAA,MAAkBC,YAAlB;;AAGAX,EAAAA,SAAS,CAAC,YAAM,CAUf,CAVQ,EAUN,CAACM,aAAD,CAVM,CAAT;AAaA,MAAMM,SAAS,GAAG,CACd;AACIC,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,QAAQ,EAAE,8CAFd;AAGIC,IAAAA,OAAO,EAAE,CACL,kBADK,EAEL,cAFK,EAGL,gBAHK,EAIL,cAJK,CAHb;AASIC,IAAAA,MAAM,EAAE,CACJ,QADI,CATZ;AAYIC,IAAAA,UAAU,EAAE;AAZhB,GADc,CAAlB;;AAiBA,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,OAAD,EAAa;AAC5BV,IAAAA,OAAO,CAACU,OAAD,CAAP;AACA,WAAOC,WAAW,CAACC,SAAD,EAAY,EAAZ,CAAlB;AACH,GAHD;;AAKA,MAAMA,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpBZ,IAAAA,OAAO,CAAC,UAAAa,QAAQ,EAAI;AAChB,UAAMH,OAAO,GAAGG,QAAQ,GAAG,CAA3B;;AACA,UAAIH,OAAO,KAAK,CAAhB,EAAmB;AACfI,QAAAA,aAAa,CAAClB,KAAD,CAAb;AACH;;AACD,aAAOc,OAAP;AACH,KANM,CAAP;AAOH,GARD;;AAUA,MAAMK,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,KAAvB;AACAhB,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAF,IAAAA,gBAAgB,CAAC,UAAAqB,iBAAiB;AAAA,aAAIrB,gBAAgB,CAACqB,iBAAiB,GAAG,CAArB,CAApB;AAAA,KAAlB,CAAhB;AACH,GAJD;;AAMA,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrB,QAAInB,SAAJ,EAAe;AACX,aAAO,oBAAC,KAAD;AAAO,QAAA,YAAY,EAAEC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;AAED,WACI,oBAAC,QAAD;AACI,MAAA,IAAI,EAAEH,IADV;AAEI,MAAA,QAAQ,EAAEI,SAAS,CAACN,aAAD,CAFvB;AAGI,MAAA,aAAa,EAAEkB,aAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAOH,GAZD;;AAcA,SAAOK,UAAU,EAAjB;AACH","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport Ready from './Ready';\r\nimport Question from './Question';\r\n\r\nexport default function SingleGame() {\r\n    let timer = null;\r\n    const [questionIndex, setQuestionIndex] = useState(0);\r\n    const [time, setTime] = useState(1000);\r\n    const [showReady, setShowReady] = useState(true);\r\n\r\n    // fires when the game starts\r\n    useEffect(() => {\r\n        /*clearInterval(timer);\r\n\r\n        setTimeout(() => {\r\n            timer = startTimer(1000);\r\n        }, 2500);\r\n\r\n        return () => {\r\n            clearInterval(timer);\r\n        };*/\r\n    }, [questionIndex]);\r\n\r\n    // TODO: get these questions from somewhere else!\r\n    const questions = [\r\n        {\r\n            id: 0,\r\n            question: 'Who is the author of \"The Bitcoin Standard\"?',\r\n            answers: [\r\n                'Saifedean Ammous',\r\n                'Parker Lewis',\r\n                'Michael Saylor',\r\n                'Preston Pysh'\r\n            ],\r\n            labels: [\r\n                'People'\r\n            ],\r\n            difficulty: 0\r\n        }\r\n    ]\r\n\r\n    const startTimer = (newTime) => {\r\n        setTime(newTime);\r\n        return setInterval(countDown, 10);\r\n    }\r\n\r\n    const countDown = () => {\r\n        setTime(prevTime => {\r\n            const newTime = prevTime - 1;\r\n            if (newTime === 0) {\r\n                clearInterval(timer);\r\n            }\r\n            return newTime;\r\n        });\r\n    }\r\n\r\n    const onClickAnswer = (index) => {\r\n        console.log('clicked', index); // TODO: index is used to check if the question was correct/incorrect\r\n        setTime(1000); // TODO: maybe this shouldnt be here\r\n        setQuestionIndex(prevQuestionIndex => setQuestionIndex(prevQuestionIndex + 1));\r\n    }\r\n\r\n    const getContent = () => {\r\n        if (showReady) {\r\n            return <Ready setShowReady={setShowReady} />\r\n        }\r\n\r\n        return (\r\n            <Question\r\n                time={time}\r\n                question={questions[questionIndex]}\r\n                onClickAnswer={onClickAnswer}\r\n            />\r\n        );\r\n    }\r\n\r\n    return getContent();\r\n}"]},"metadata":{},"sourceType":"module"}